- !<AssetImportMetadata/4ac58f12-c214-4d8c-2f86-38b95691ef86>
  ImporterSettings: !<AssetImporterSettings>
    {}
  ImportedAssetIds:
    TypeScriptAsset: !<reference> fa8d58de-519f-43c1-a79d-1bfa5fdecfb0
  ImporterName: TypeScriptAssetImporter
  PrimaryAsset: !<reference> fa8d58de-519f-43c1-a79d-1bfa5fdecfb0
  PackageType: NotAPackage
  AssetDataMap:
    TypeScriptAsset: !<own> a87395f7-1364-45eb-b950-10fed667ddb1
  PackagePolicy: CannotBeUnpacked
  DependentFiles:
    []
  CompressionSettings: !<own> 00000000-0000-0000-0000-000000000000
  ExtraData:
    {}
- !<TypeScriptAssetData/a87395f7-1364-45eb-b950-10fed667ddb1>
  Icon: ""
  Description: ""
  InternalVersion: 0
  VersionMajor: 0
  VersionMinor: 0
  VersionPatch: 0
  ComponentUid: 0392308f-3ad1-4647-831e-e2235707591f
  ExportUid: 00000000-0000-0000-0000-000000000000
  CurrentVisibility: Editable
  MaxVisibility: Editable
  ScriptInputsHidden:
    _drawDebug: false
    _maxRaycastDistance: false
    indirectDragThreshold: false
    indirectTargetingVolumeMultiplier: false
    mouseTargetingMode: false
    moveInDepth: false
    moveInDepthAmount: false
    sphereCastEnabled: false
    spherecastDistanceThresholds: false
    spherecastRadii: false
  ScriptTypesHidden:
    {}
  DefaultScriptInputs:
    - _drawDebug: false
      sphereCastEnabled: false
      spherecastRadii: !<float[]>
        - 0.500000
        - 2.000000
        - 4.000000
      spherecastDistanceThresholds: !<float[]>
        - 0.000000
        - 12.000000
        - 30.000000
      _maxRaycastDistance: !<float> 500.000000
      indirectTargetingVolumeMultiplier: !<float> 1.000000
      indirectDragThreshold: !<float> 3.000000
      mouseTargetingMode: !<float> 2.000000
      moveInDepth: false
      moveInDepthAmount: !<float> 5.000000
  ScriptTypes:
    -
      {}
  InputLines:
    - '// @ui {"widget":"group_start", "label":"Interactor"}'
    - '// @input bool _drawDebug {"hint":"Should draw gizmos for visual debugging."}'
    - '// @ui {"widget":"group_start", "label":"Spherecast Configuration"}'
    - '// @input bool sphereCastEnabled {"hint":"Should use spherecast for targeting when raycast does not register a hit."}'
    - '// @input number[] spherecastRadii = "{0.5, 2.0, 4.0}" {"hint":"Defines the radii (in cm) used for progressive spherecasting when raycast fails to hit a target. Used in sequence with spherecastDistanceThresholds to perform increasingly larger sphere casts until a target is found. Smaller radii provide more precise targeting while larger radii help target small or distant objects. Must have the same array length as spherecastDistanceThresholds.", "showIf":"sphereCastEnabled", "showIfValue":true}'
    - '// @input number[] spherecastDistanceThresholds = "{0, 12, 30}" {"hint":"Defines distance offsets (in cm) from the ray origin for performing sphere casts. Each value creates a sphere cast starting point at [ray origin + (direction * offset)]. Used in sequence with spherecastRadii, with the system trying progressively larger sphere casts until a target is found. Helps improve targeting of small or distant objects. Must have the same array length as spherecastRadii.", "showIf":"sphereCastEnabled", "showIfValue":true}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"group_start", "label":"Targeting Configuration"}'
    - '// @input float _maxRaycastDistance = 500 {"hint":"The maximum distance at which the interactor can target interactables."}'
    - '// @input float indirectTargetingVolumeMultiplier = 1 {"hint":"A multiplier applied to spherecast radii when using indirect targeting. Larger values create wider targeting areas, making it easier to target objects at the expense of precision. Smaller values provide more precise targeting."}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"group_start", "label":"Indirect Drag Provider"}'
    - '// @input float indirectDragThreshold = 3 {"hint":"Controls the minimum distance (in cm) the hand must move during indirect interaction to be considered a drag. When the distance between the interaction origin position and current position exceeds this threshold, dragging behavior is detected and tracked. Lower values make dragging more sensitive and easier to trigger, while higher values require more deliberate movement before dragging begins."}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"group_end"}'
    - '// @ui {"widget":"group_start", "label":"MouseInteractor"}'
    - '// @input float mouseTargetingMode = 2 {"hint":"Sets the return value of MouseInteractor.activeTargetingMode for cases where non-indirect targeting needs to be tested specifically. Useful whenever your code has checks for interactor.activeTargetingMode === TargetingMode.X.", "widget":"combobox", "values":[{"label":"Direct", "value":1}, {"label":"Indirect", "value":2}, {"label":"All", "value":3}, {"label":"Poke", "value":4}]}'
    - '// @ui {"widget":"group_end"}'
    - '// @input bool moveInDepth {"hint":"Moves the interactor in depth to help test 3D interactions in z space."}'
    - '// @input float moveInDepthAmount = 5 {"hint":"Controls the maximum distance (in cm) that the mouse interactor will move back and forth along its ray direction     when moveInDepth is enabled. Higher values create larger depth movements, simulating interaction across a wider     z-range for testing 3D interactions.", "showIf":"moveInDepth", "showIfValue":true}'
  SvgIcon: ""
  DeclarationFile: !<reference> 00000000-0000-0000-0000-000000000000
  SetupScript:
    code: ""
  ReadMe: !<reference> 00000000-0000-0000-0000-000000000000
